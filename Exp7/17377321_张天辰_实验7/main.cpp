//
//  main.cpp
//  RSA
//
//  Created by Wang Jianmin on 2019/4/25.
//  Copyright © 2019年 Zhang Tianchen. All rights reserved.
//

#include <iostream>
#include "BigInteger.hpp"
#include <time.h>
using namespace std;

int main(int argc, const char * argv[]) {
    /*
    BigInteger c("48414523238698295285471799382987991637914938562193014902890153850030441880428839346071059515653499509252249257856692449071732649412416739147176616265241735381054084429325074723213517775131473500232669403947624446554635864896773107694363591954775532003567547517653617695609427508466969972576587715171890704707");
    BigInteger d("22329940785846824781098151041465841334313077303350053983391998557321456330897555774212375294214474708057792661081316923431086832139465173782834126385268649108515405057016421089800245128856734195312397048752174436334988015792534375250729368808615202254693104906376777785362368858110047522825505245332432410827");
    BigInteger n("117150758818687471553718250712031717039487293423494414873444931695685906217661897304508464470489171186576059393735964652027280800457485801367681979570458303761492710534041342422466796521485028971706653063121598021718557354736363418743555536174350765795912889223353384778734543571754593736392809271522820773689");
    time_t start, end;
    start = clock();
    BigInteger m = c.power(d, n);
    end = clock();
    cout<<m.toString()<<endl;
    cout<<(double)(end - start) / CLOCKS_PER_SEC<<endl;
     */
    time_t start, end;
    BigInteger a("13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095");
    BigInteger p("26815615859885194199148049996411692254958731641184786755447122887443528060147093953603748596333806855380063716372972101707507765623893139892867298012168191");
    BigInteger m("179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215");
    start = clock();
    BigInteger r = p.power(a, m);
    end = clock();
    cout<<r.toString()<<endl;
    cout<<(double)(end - start) / CLOCKS_PER_SEC<<endl;
    return 0;
}
